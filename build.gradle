plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'jacoco'
	id 'com.diffplug.spotless' version '5.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

spotless {
	java {
		googleJavaFormat()
		removeUnusedImports()
		trimTrailingWhitespace()
	}
}


ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'com.opencsv:opencsv:5.5.2'
	implementation 'org.locationtech.jts:jts-core:1.18.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'net.postgis:postgis-jdbc:2.5.0'
	implementation 'joda-time:joda-time:2.10.13'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	outputs.dir snippetsDir
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

jacocoTestReport {
	dependsOn test
}


